---
- name: Setup Update+Upgrade, Set time zone, Docker, Docker Compose, and Portainer
  hosts: all
  become: yes
  vars:
    docker_gpg_path: /etc/apt/keyrings/docker.gpg

  pre_tasks:
    - name: Ensure community.docker collection is available
      ansible.builtin.meta: require_collection
      collections:
        - community.docker

  tasks:
    - name: Update and upgrade system packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Set timezone to Asia/Kolkata
      timezone:
        name: Asia/Kolkata

    - name: Install base dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: "{{ docker_gpg_path }}"
        mode: '0644'
      register: docker_gpg

    - name: Convert GPG key to dearmor format
      command: gpg --dearmor -o "{{ docker_gpg_path }}" "{{ docker_gpg_path }}"
      when: docker_gpg is changed

    - name: Add Docker apt repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: |
          deb [arch={{ ansible_architecture }} signed-by={{ docker_gpg_path }}] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Create Portainer volume
      community.docker.docker_volume:
        name: portainer_data

    - name: Deploy Portainer container
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        published_ports:
          - "8000:8000"
          - "9443:9443"
        restart_policy: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
        state: started
